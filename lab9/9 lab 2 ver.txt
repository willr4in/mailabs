#include <stdio.h>

int sign(int x) {
	if (x == 0) {
		return 0;
	}
	else if (x > 0) {
		return 1;
	}
	else if (x < 0) {
		return -1;
	}
}

int abs(int y) {
	if (y > 0) {
		return y;
	}
	else {
		return -y;
	}
}

int min(int a, int b) {
	if (a > b) {
		return b;
	}
	else {
		return a;
	}
}

int main() {
	int n_max_step = 50, const i0 = -11, const j0 = -6, const l0 = -5, k_step = 1, i[50], j[50], l[50];
	i[0] = i0;
	j[0] = j0;
	l[0] = l0;
	for (int k_step = 1; k_step <= n_max_step; k_step++) {
		i[k_step] = ((i[k_step - 1] + j[k_step - 1] + l[k_step - 1]) * (k_step - 1 + 1)) % 25 - (i[k_step - 1] * j[k_step - 1] * l[k_step - 1] * (k_step - 1 + 2) % 10) + 10;
		j[k_step] = min(((i[k_step - 1] + j[k_step - 1] + l[k_step - 1]) * (k_step - 1 + 3) % 25), (i[k_step - 1] * j[k_step - 1] * l[k_step - 1] * (k_step - 1 + 4) % 25)) + 10;
		l[k_step] = 2 * sign(l[k_step - 1] * abs(((i[k_step - 1] + j[k_step - 1] + l[k_step - 1]) * (k_step - 1 + 5) % 10) - (i[k_step - 1] * j[k_step - 1] * l[k_step - 1] * (k_step - 1 + 6) % 25)));
		if ((i[k_step] >= 5) && (i[k_step] <= 15) && (j[k_step] >= -15) && (j[k_step] <= -5)) {
			printf("In area\n");
			printf("Number of step k = %d\n", k_step);
			printf("Coordinate i = %d\n", i[k_step]);
			printf("Coordinate j = %d\n", j[k_step]);
			printf("Parameter l = %d\n", l[k_step]);
			break;
		}
	}
	if (k_step == 50) {
		printf("Out area\n");
	}
	return 0;
}
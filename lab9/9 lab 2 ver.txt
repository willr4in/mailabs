#include <stdio.h>

int sign(int x) {
	if (x == 0) {
		return 0;
	}
	else if (x > 0) {
		return 1;
	}
	else if (x < 0) {
		return -1;
	}
}

int abs(int y) {
	if (y > 0) {
		return y;
	}
	else {
		return -y;
	}
}

int min(int a, int b) {
	if (a > b) {
		return b;
	}
	else {
		return a;
	}
}

int main() {
	int n = 50, const i0 = -11, const j0 = -6, const l0 = -5, k = 1, i[50], j[50], l[50];
	i[0] = i0;
	j[0] = j0;
	l[0] = l0;
		for (int k = 1; k <= n; k++) {
			i[k] = ((i[k-1] + j[k-1] + l[k-1]) * (k - 1 + 1)) % 25 - (i[k-1] * j[k-1] * l[k-1] * (k - 1 + 2) % 10) + 10;
			j[k] = min(((i[k-1] + j[k-1] + l[k-1]) * (k - 1+ 3) % 25), (i[k-1] * j[k-1] * l[k-1] * (k - 1 + 4) % 25)) + 10;
			l[k] = 2 * sign(l[k-1] * abs(((i[k-1] + j[k-1] + l[k-1]) * (k - 1 + 5) % 10) - (i[k-1] * j[k-1] * l[k-1] * (k - 1 + 6) % 25)));
			if ((i[k] >= 5) && (i[k] <= 15) && (j[k] >= -15) && (j[k] <= -5)) {
				printf("In area\n");
				printf("Number of step k = %d\n", k);
				printf("Coordinate i = %d\n", i[k]);
				printf("Coordinate j = %d\n", j[k]);
				printf("Parameter l = %d\n", l[k]);
				break;
			}
		}
		if (k == 50) {
			printf("Out area\n");
		}
	return 0;
}